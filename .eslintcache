[{"C:\\Users\\caiqu\\Documents\\WWW\\Projetos\\tabuada\\src\\components\\CalcTab.js":"1","C:\\Users\\caiqu\\Documents\\WWW\\Projetos\\tabuada\\src\\index.js":"2","C:\\Users\\caiqu\\Documents\\WWW\\Projetos\\tabuada\\src\\components\\Todo.js":"3","C:\\Users\\caiqu\\Documents\\WWW\\Projetos\\tabuada\\src\\routes.js":"4","C:\\Users\\caiqu\\Documents\\WWW\\Projetos\\tabuada\\src\\components\\Header.js":"5","C:\\Users\\caiqu\\Documents\\WWW\\Projetos\\tabuada\\src\\components\\hooks\\useLocalStorage.js":"6"},{"size":1214,"mtime":1611698492557,"results":"7","hashOfConfig":"8"},{"size":207,"mtime":1611621004740,"results":"9","hashOfConfig":"8"},{"size":3462,"mtime":1611963623793,"results":"10","hashOfConfig":"8"},{"size":460,"mtime":1611621114764,"results":"11","hashOfConfig":"8"},{"size":581,"mtime":1611623534869,"results":"12","hashOfConfig":"8"},{"size":1300,"mtime":1611962594302,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"1wysl6j",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\caiqu\\Documents\\WWW\\Projetos\\tabuada\\src\\components\\CalcTab.js",["28"],"import React, { useState } from \"react\";\r\n\r\nimport \"../styles.css\";\r\nimport Header from \"./Header\";\r\nfunction Tabuada() {\r\n  const [tab, setTabs] = useState([]);\r\n  const [values, setValues] = useState();\r\n\r\n  function handleValues(e) {\r\n    const { name, value } = e.target;\r\n    if (value) {\r\n      setValues(value);\r\n      return;\r\n    }\r\n  }\r\n\r\n  function calcTabuada(e) {\r\n    e.preventDefault();\r\n    if (values) {\r\n      let newTabs = [];\r\n      for (let t = 1; t <= 10; t++) {\r\n        let total = values * t;\r\n        newTabs.push(`${values} x ${t} = ${total}`);\r\n      }\r\n      setTabs(newTabs);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"App\">\r\n        <div className=\"content\">\r\n          <h2>Tabuada de: </h2>\r\n          <form onSubmit={calcTabuada}>\r\n            <input\r\n              onChange={handleValues}\r\n              type=\"number\"\r\n              name=\"tabuada\"\r\n              id=\"\"\r\n              required\r\n            />\r\n          </form>\r\n          <div className=\"itens\">\r\n            {tab.map((item) => (\r\n              <li key={item}>{item}</li>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default Tabuada;\r\n","C:\\Users\\caiqu\\Documents\\WWW\\Projetos\\tabuada\\src\\index.js",[],"C:\\Users\\caiqu\\Documents\\WWW\\Projetos\\tabuada\\src\\components\\Todo.js",["29"],"import React, { useState, useCallback, useMemo } from 'react';\r\nimport Header from './Header';\r\nimport nextId from \"react-id-generator\";\r\n\r\nimport useLocalStorage from './hooks/useLocalStorage'\r\nimport './Todo.css'\r\nexport default function Todo() {\r\n\r\n  const [task, setTask] = useLocalStorage('Tasks', []);\r\n  const [value, setValue] = useState('');\r\n  const [filter, setFilter] = useState('all');\r\n\r\n  const filteredTodos = useMemo(() => {\r\n    if(filter === 'all'){\r\n      return task\r\n    }else if(filter === 'completed'){\r\n      return task.filter(item => item.completed)\r\n    }else if(filter === 'not_completed'){\r\n      return task.filter(item => !item.completed)\r\n    }\r\n  },[task, filter])\r\n  // clear input\r\n  function clearInput(){\r\n    setValue('');\r\n  }\r\n  \r\n  // adiciona task ao array de task\r\n  function handleTask(e){\r\n    e.preventDefault();\r\n    const newTask = {\r\n      id: nextId(),\r\n      text: value,\r\n      completed: false\r\n    }\r\n    if(newTask.text) {\r\n      setTask([...task, newTask]);\r\n    }\r\n    clearInput();\r\n  }\r\n\r\n  // deleta a task do array puxando pelo id\r\n  function deleteTask(id){\r\n    setTask(task.filter(index => index.id !== id));\r\n  }\r\n\r\n  // adiciona o check ao completed da task\r\n  function handleChcked(id){\r\n    const newTask = task.filter(item => item.id === id);\r\n    newTask[0].completed = !newTask[0].completed;\r\n    setTask([...task]);\r\n  }\r\n\r\n  // grava no value o valor digitado do input\r\n  function handleValues (e) {\r\n    const { value } = e.target;\r\n    if(!value) return;\r\n      setValue(value);\r\n   }\r\n\r\n    return (\r\n      <>\r\n        <Header />\r\n        <div className=\"content\"> \r\n          <form onSubmit={handleTask}>\r\n            <input\r\n              autoFocus\r\n              autoComplete=\"off\"\r\n              onChange={handleValues}\r\n              value={value}\r\n              name=\"task\"\r\n              type=\"text\"\r\n              placeholder=\"task...\"\r\n            />\r\n          </form>\r\n          <div className=\"itens\">\r\n            {\r\n              filteredTodos.map(item => (\r\n                <>\r\n                  <li key={item.id}>\r\n                    <input \r\n                    defaultChecked={item.completed} \r\n                    type=\"checkbox\" \r\n                    onClick={e => handleChcked(item.id) }/>\r\n                    <strong className={item.completed ? \"completed\" : \"\"}>\r\n                      {item.text}\r\n                    </strong>\r\n                    <button title=\"deletar\" onClick={ e => deleteTask(item.id)}>X</button>\r\n                  </li>\r\n                </>\r\n              ))\r\n            }\r\n              <hr />\r\n              <div className=\"details\">\r\n                  <strong>\r\n                    {\r\n                      task.length > 0 && <span>Total {task.length}</span>\r\n                    }\r\n                  </strong>\r\n                <div className=\"details-nav\">\r\n                  <button \r\n                    onClick={() => setFilter(\"all\")}\r\n                    className=\"all\"\r\n                  >All</button>\r\n                  <button \r\n                    onClick={() => setFilter(\"completed\")}\r\n                    className=\"complete\">Completed</button>\r\n                  <button \r\n                    onClick={() => setFilter(\"not_completed\")}\r\n                    className=\"active\"\r\n                  >Active</button>\r\n                </div>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n}\r\n","C:\\Users\\caiqu\\Documents\\WWW\\Projetos\\tabuada\\src\\routes.js",[],"C:\\Users\\caiqu\\Documents\\WWW\\Projetos\\tabuada\\src\\components\\Header.js",[],"C:\\Users\\caiqu\\Documents\\WWW\\Projetos\\tabuada\\src\\components\\hooks\\useLocalStorage.js",[],{"ruleId":"30","severity":1,"message":"31","line":10,"column":13,"nodeType":"32","messageId":"33","endLine":10,"endColumn":17},{"ruleId":"30","severity":1,"message":"34","line":1,"column":27,"nodeType":"32","messageId":"33","endLine":1,"endColumn":38},"no-unused-vars","'name' is assigned a value but never used.","Identifier","unusedVar","'useCallback' is defined but never used."]